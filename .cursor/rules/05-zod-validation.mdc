---
description: 
globs: **/*.ts,**/*.tsx
alwaysApply: false
---
- **Definición de Esquemas:**
  - Define esquemas Zod para todas las estructuras de datos que necesiten validación (formularios, parámetros de API, respuestas, variables de entorno).
  - Prefiere `z.object({...}).strict()` para que Zod rechace claves inesperadas en los objetos, mejorando la seguridad de los datos.
  ```typescript
  import { z } from 'zod';

  const UserSchema = z.object({
    id: z.string().uuid(),
    name: z.string().min(2),
    email: z.string().email(),
    age: z.number().int().positive().optional(),
  }).strict();

  type User = z.infer<typeof UserSchema>;
  ```

- **Inferencia de Tipos:**
  - Utiliza `z.infer<typeof schemaName>` para derivar tipos TypeScript directamente de los esquemas Zod. Esto asegura que tus tipos y validaciones estén siempre sincronizados.

- **Validación en Tiempo de Ejecución:**
  - En Server Actions, API Route Handlers, y al manejar datos de formularios del cliente, valida la entrada usando el método `.safeParse(data)`.
  ```typescript
  // En una Server Action o API Route
  // async function handleRequest(formData: FormData) {
  //   'use server'; // o en un API Route
  //   const rawData = Object.fromEntries(formData.entries());
  //   const validationResult = UserSchema.safeParse(rawData);

  //   if (!validationResult.success) {
  //     return { errors: validationResult.error.flatten().fieldErrors };
  //   }
  //   const validatedData = validationResult.data;
  //   // ... procesar validatedData
  // }
  ```
  - Usa `.parse(data)` si prefieres que Zod lance un `ZodError` en caso de fallo, que puedes capturar en un `try...catch`.

- **Formularios (Client-side):**
  - Integra Zod con librerías de formularios como React Hook Form usando `@hookform/resolvers/zod` para validación del lado del cliente.

- **Mensajes de Error Personalizados:**
  - Personaliza los mensajes de error de Zod para una mejor experiencia de usuario, si es necesario:
  ```typescript
  const NameSchema = z.string().min(3, { message: "Name must be at least 3 characters long." });
  ```

- **Fuente Única de Verdad:**
  - Trata tus esquemas Zod como la fuente única de verdad para la forma de tus datos. Deriva tipos y validaciones de ellos.

